# This is free software, lisence use MIT.
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Lienol-ea8500-CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get update
          # sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3.6+ python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          # 可用空间仅有31GB,编译需要约34-38GB空间
          sudo rm -rf /usr/share/dotnet
          # 可获得3GB空间
          df -h
          sudo rm -rf /usr/local/lib/android
          # 可获得11GB空间
          df -h
          sudo rm -rf /opt/ghc
          # 可获得0GB空间
          df -h
      - name: git clone Lienol
        run: |
          git clone --single-branch -b 22.03 https://github.com/Lienol/openwrt.git       
          mv ./openwrt/* ./ 
          du -h --max-depth=1
      - name: add kenzo8/openwrt-packages and kenzo8/small Update feeds
        run: |
          sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages' ./feeds.conf.default
          sed -i '$a src-git small https://github.com/kenzok8/small' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # compiling openwrt-19.07 need use branch master-libcap to replace ./feeds/packages/libs/libcap 
          #rm -rf feeds/packages/libs/libcap
          #svn co https://github.com/openwrt/openwrt/trunk/package/libs/libcap ./feeds/packages/libs/libcap
          # svn co https://github.com/coolsnowwolf/lede/trunk/package/libs/libcap ./feeds/packages/libs/libcap
          # add luci-app-omcproxy and luci-app-iptvhelper
          #cd ./package
          #git clone https://github.com/riverscn/luci-app-omcproxy.git
          #git clone https://github.com/riverscn/openwrt-iptvhelper.git
          sed -i 's/192.168.1.1/192.168.0.1/g' package/base-files/files/bin/config_generate
      - name: download some code
        run: |
          # compiling openwrt-19.07 need add "push @mirrors, 'https:\/\/sources.cdn.openwrt.org'"
          #sed -i "s/#push @mirrors, 'https:\/\/mirror1.openwrt.org';/push @mirrors, 'https:\/\/sources.cdn.openwrt.org';/g" ./scripts/download.pl
          # here is openwrt-19.07 or lede can not download some code
          #mkdir -p ./dl
          #cd ./dl
          #wget -c -r -nd -np http://204.13.154.47:1000/openwrt-dl/
          #rm -rf $(find -name "index.html*")
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #cp ./myea8500.config ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_ipq806x=y
          CONFIG_TARGET_ipq806x_generic=y
          CONFIG_TARGET_MULTI_PROFILE=y
          CONFIG_TARGET_DEVICE_ipq806x_generic_DEVICE_linksys_ea8500=y
          CONFIG_TARGET_DEVICE_PACKAGES_ipq806x_generic_DEVICE_linksys_ea8500=""
          CONFIG_ALL_KMODS=y
          CONFIG_ALL_NONSHARED=y
          CONFIG_DEVEL=y
          CONFIG_TARGET_PER_DEVICE_ROOTFS=y
          CONFIG_AUTOREMOVE=y
          CONFIG_BPF_TOOLCHAIN_BUILD_LLVM=y
          # CONFIG_BPF_TOOLCHAIN_NONE is not set
          CONFIG_BUILDBOT=y
          CONFIG_COLLECT_KERNEL_DEBUG=y
          CONFIG_HAS_BPF_TOOLCHAIN=y
          CONFIG_IB=y
          CONFIG_IMAGEOPT=y
          CONFIG_KERNEL_BUILD_DOMAIN=""
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          # CONFIG_KERNEL_KALLSYMS is not set
          CONFIG_MAKE_TOOLCHAIN=y
          
          CONFIG_PACKAGE_cgi-io=y
          CONFIG_PACKAGE_ddnsto=y
          CONFIG_PACKAGE_adblock=m
          CONFIG_PACKAGE_adguardhome=m
          CONFIG_PACKAGE_ca-certificates=m
          CONFIG_PACKAGE_chinadns-ng=m
          CONFIG_PACKAGE_dns2socks=m
          CONFIG_PACKAGE_dns2tcp=m
          CONFIG_PACKAGE_dnsmasq-full=m
          CONFIG_PACKAGE_hysteria=m
          CONFIG_PACKAGE_ipt2socks=m
          CONFIG_PACKAGE_libbpf=m
          CONFIG_PACKAGE_libelf=m
          CONFIG_PACKAGE_libustream-wolfssl=m
          CONFIG_PACKAGE_libwolfssl=m
          CONFIG_PACKAGE_libiwinfo-lua=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_liblucihttp=y
          CONFIG_PACKAGE_liblucihttp-lua=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-app-ddnsto=y
          CONFIG_PACKAGE_luci-app-omcproxy=y
          
          CONFIG_PACKAGE_luci-app-adblock=m
          CONFIG_PACKAGE_luci-app-adguardhome=m
          CONFIG_PACKAGE_luci-app-advanced-reboot=y
          CONFIG_PACKAGE_luci-app-argonne-config=m
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-clash=m
          CONFIG_PACKAGE_luci-app-openclash=m
          CONFIG_PACKAGE_luci-app-bypass=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Shadowsocks_Libev_Client=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_ShadowsocksR_Libev_Client=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Shadowsocks_Libev_Server=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Simple_obfs=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_V2ray_plugin=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Xray=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Trojan=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_NaviProxy=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Kcptun=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks5_Proxy=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Socks_Server=m
          CONFIG_PACKAGE_luci-app-bypass_INCLUDE_Hysteria=n
          CONFIG_PACKAGE_luci-app-passwall=m
          CONFIG_PACKAGE_luci-app-passwall_Transparent_Proxy=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ChinaDNS_NG=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Haproxy=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_NaiveProxy=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_PDNSD=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Client=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Libev_Server=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_Rust_Client=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Client=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_Libev_Server=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Simple_Obfs=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_GO=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_Plus=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_V2ray_Plugin=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Hysteria=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_IPV6_Nat=m
          CONFIG_PACKAGE_luci-app-passwall2=m
          CONFIG_PACKAGE_luci-app-passwall2_Transparent_Proxy=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_NaiveProxy=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Client=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Libev_Server=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Shadowsocks_Rust_Client=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Client=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_ShadowsocksR_Libev_Server=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Simple_Obfs=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_V2ray=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_V2ray_Plugin=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Brook=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_Hysteria=m
          CONFIG_PACKAGE_luci-app-passwall2_INCLUDE_IPV6_Nat=m
          CONFIG_PACKAGE_luci-app-ssr-plus=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=m
          CONFIG_PACKAGE_luci-app-ssr_plus_INCLUDE_NaiveProxy=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Client=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Libev_Server=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Client=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_Rust_Server=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Client=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Libev_Server=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_Obfs=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_Plugin=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Xray=m
          CONFIG_PACKAGE_luci-app-ssr_plus_INCLUDE_Kcptun=m
          CONFIG_PACKAGE_luci-app-ssr_plus_INCLUDE_Hysteria=m
          CONFIG_PACKAGE_luci-app-vssr=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Trojan=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Xray_plugin=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_ShadowsocksR_Libev_Server=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Kcptun=n
          CONFIG_PACKAGE_luci-app-vssr_INCLUDE_Hysteria=n
          CONFIG_PACKAGE_luci-i18n-adblock-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-advanced-reboot-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-argonne-config-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-autoreboot-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-bypass-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ddnsto-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-omcproxy-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-passwall2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-vssr-zh-cn=m
          
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-lib-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-ssl=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          
          CONFIG_PACKAGE_luci-theme-argonne=m
          CONFIG_PACKAGE_microsocks=m
          CONFIG_PACKAGE_naiveproxy=m
          CONFIG_PACKAGE_omcproxy=y
          CONFIG_PACKAGE_pdnsd-alt=m
          CONFIG_PACKAGE_redsocks2=m
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_shadowsocks-libev-config=m
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=m
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=m
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=m
          CONFIG_PACKAGE_shadowsocks-rust-sslocal=m
          CONFIG_PACKAGE_shadowsocks-rust-ssserver=m
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-check=m
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=m
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=m
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=m
          CONFIG_PACKAGE_simple-obfs=m
          CONFIG_PACKAGE_simple-obfs-server=m
          CONFIG_PACKAGE_smartdns=m
          CONFIG_PACKAGE_tcping=m
          CONFIG_PACKAGE_trojan=m
          CONFIG_PACKAGE_trojan-go=m
          CONFIG_PACKAGE_trojan-plus=m
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-core=m
          CONFIG_PACKAGE_v2ray-geoip=m
          CONFIG_PACKAGE_v2ray-geosite=m
          CONFIG_PACKAGE_v2ray-plugin=m
          CONFIG_PACKAGE_v2raya=m
          CONFIG_PACKAGE_wpad-basic=y
          CONFIG_PACKAGE_wpad-basic-wolfssl=m
          CONFIG_PACKAGE_xray-core=m
          CONFIG_PACKAGE_xray-plugin=m
          CONFIG_PACKAGE_xtables-legacy=m
          
          CONFIG_PACKAGE_px5g-wolfssl=y
          CONFIG_PACKAGE_qosify=m
          CONFIG_PACKAGE_rpcd=y
          CONFIG_PACKAGE_rpcd-mod-file=y
          CONFIG_PACKAGE_rpcd-mod-iwinfo=y
          CONFIG_PACKAGE_rpcd-mod-luci=y
          CONFIG_PACKAGE_rpcd-mod-rrdns=y
          CONFIG_PACKAGE_tc-full=m
          CONFIG_PACKAGE_tc-mod-iptables=m
          CONFIG_PACKAGE_uhttpd=y
          CONFIG_PACKAGE_uhttpd-mod-ubus=y
          CONFIG_PACKAGE_zlib=m
          CONFIG_REPRODUCIBLE_DEBUG_INFO=y
          CONFIG_SDK=y
          CONFIG_SDK_LLVM_BPF=y
          CONFIG_TARGET_ALL_PROFILES=y
          CONFIG_USE_LLVM_BUILD=y
          CONFIG_VERSIONOPT=y
          CONFIG_VERSION_BUG_URL=""
          CONFIG_VERSION_CODE=""
          CONFIG_VERSION_DIST="OpenWrt"
          CONFIG_VERSION_FILENAMES=y
          CONFIG_VERSION_HOME_URL=""
          CONFIG_VERSION_HWREV=""
          CONFIG_VERSION_MANUFACTURER=""
          CONFIG_VERSION_MANUFACTURER_URL=""
          CONFIG_VERSION_NUMBER=""
          CONFIG_VERSION_PRODUCT=""
          CONFIG_VERSION_REPO="https://downloads.openwrt.org/releases/22.03.3"
          CONFIG_VERSION_SUPPORT_URL=""
          EOF
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          # git switch -c 5a2559f0648198c290bb8839b9f6a0adab8ebcdc
          #git switch -c d63ff863800a5645aca4309d5dd5962bd1e95543
          #git switch -c 486bebd9208539058e57e23a12f23103016e09b4
          #git switch -c 697977d8d0ccf0ab596e5692d08608a75dd7f33d
          #git switch -c 740d0102c518cd49f30c5580982b218b480006b1
          #git switch -c 809a00deffe9f3d4ecd15965790a152757073437
          #git switch -c 9228212b4238c0d8c296f795948ede8f2ca0242e
          #git switch -c 9b74deef2816d91e58926e6fab7a6ff931eb3b22
          #git switch -c 31f5cd4b83da5a7c0fdca240b4e72677e4523b6e
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=sc
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          cd ./bin
          du -h ./ --max-depth=3
          tar -czvf ea8500.tar.xz targets packages
          cd -   
          cp ./bin/ea8500.tar.xz ./artifact/buildinfo/
          
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

 #     - name: Upload release asset
 #       if: github.event == 'release'
 #       uses: svenstaro/upload-release-action@v2
 #       with:
 #         repo_token: ${{ secrets.YOURTOKEN }}
 #         file: ./artifact/firmware/*
 #         tag: ${{ github.ref }}
 #         file_glob: true
      # Publish a release if is a tag
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./bin/ea8500.tar.xz         
# This is a basic workflow to help you get started with Actions
