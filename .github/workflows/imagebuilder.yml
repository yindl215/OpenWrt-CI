# This is free software, lisence use MIT.
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: image builder-ci

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:
#  workflow_dispatch:
#    inputs:
#      clean_cache:
#        description: 'Clear caches'
#        required: false
#        type: boolean

# push:
#   branches: 
#     - master
  # schedule:
  #   - cron: 0 20 * * *
#  release:
#    types: [published]

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          # sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          # sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          #sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3.6+ python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          # 可用空间仅有31GB,编译需要约34-38GB空间
          sudo rm -rf /usr/share/dotnet
          # 可获得3GB空间
          df -h
          sudo rm -rf /usr/local/lib/android
          # 可获得11GB空间
          df -h
          sudo rm -rf /opt/ghc
          # 可获得0GB空间
          df -h
      - name: git clone openwrt image builder
        run: |
          # git clone --single-branch -b openwrt-19.07 https://github.com/openwrt/openwrt       
          # mv ./openwrt/* ./ 
          #curl -fL -m 300 -o sdk.tar.xz https://downloads.openwrt.org/releases/19.07.10/targets/ipq806x/generic/openwrt-sdk-19.07.10-ipq806x-generic_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
          curl -fL -m 300 -o sdk.tar.xz https://downloads.openwrt.org/releases/22.03.3/targets/ipq806x/generic/openwrt-sdk-22.03.3-ipq806x-generic_gcc-11.2.0_musl_eabi.Linux-x86_64.tar.xz
          mkdir openwrt
          tar -xJf sdk.tar.xz -C openwrt
          rm -Rf sdk.tar.xz
          cd openwrt
          cp -rf ./openwrt-sdk*/. ./ || true
          du -h --max-depth=2
      - name: add kenzo8/small-packages and small and Update feeds
        run: |
          cd ./openwrt
          # sed -i '$a src-git kenzo https://github.com/kenzok8/small-packages' ./feeds.conf.default
       
          sed -i '/	refresh_config();/d' scripts/feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          # compiling openwrt-19.07 need use branch master-libcap to replace ./feeds/packages/libs/libcap 
          # rm -rf feeds/packages/libs/libcap
          # svn co https://github.com/openwrt/openwrt/trunk/package/libs/libcap ./feeds/packages/libs/libcap
          # svn co https://github.com/coolsnowwolf/lede/trunk/package/libs/libcap ./feeds/packages/libs/libcap
         
          #sed -i "s/#push @mirrors, 'https:\/\/mirror1.openwrt.org';/push @mirrors, 'https:\/\/sources.cdn.openwrt.org';/g" ./scripts/download.pl
          # in current mode feeds install can not install kenzok8/small-package to package/feeds/kenzo
          cd ./package
          #git clone https://github.com/kenzok8/small-package.git ./custom
          git clone https://github.com/kenzok8/openwrt-packages.git ./custom
          git clone https://github.com/kenzok8/small.git ./custom1
          mv ./custom1/* ./custom/
          # add luci-app-omcproxy and luci-app-iptvhelper,22.03hane include omcproxy,kenzok8/openwrt-packages have include iptvhelper
          #cd ./custom
          #git clone https://github.com/riverscn/luci-app-omcproxy.git 
          # kenzok8/small-packages have include iptvhelper
          #git clone https://github.com/riverscn/openwrt-iptvhelper.git
          # du -h ./ --max-depth=3
          rm -rf $(find ./. -maxdepth 1 -type d -name "diy" -or -name ".git*" -or -name "my*")
          #rm -rf $(find ./. -maxdepth 1 -type d -name ".git*")
          #rm -rf $(find ./. -maxdepth 1 -type d -name "my*")
          du -h ./ --max-depth=1
          cd ../../
          # 22.03 is not zhe two file
          #sed -i "/mediaurlbase/d" package/feeds/*/luci-theme*/root/etc/uci-defaults/*
          #sed -i '/WARNING: Makefile/d' scripts/package-metadata.pl
          rm -Rf tmp
          #staging_dir/host/bin/ have lack python3 and po2lmo
          # 22.03 is not zhe python file
          #if [ -f /usr/bin/python ]; then
          #	ln -sf /usr/bin/python staging_dir/host/bin/python
          # else
          #	ln -sf /usr/bin/python3 staging_dir/host/bin/python
          # fi
          ln -sf /usr/bin/python3 staging_dir/host/bin/python3
          #wget -c -nd -np https://raw.githubusercontent.com/kenzok8/compile-package/main/devices/common/po2lmo
          #cp -f ./po2lmo staging_dir/host/bin/po2lmo
          #chmod +x staging_dir/host/bin/po2lmo
      - name: Generate configuration file
        run: |
          cd ./openwrt
          rm -f ./.config*
          touch ./.config
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_LUCI_CSSTIDY=n
          CONFIG_AUTOREBUILD=y
          CONFIG_AUTOREMOVE=n
          CONFIG_ALL=n
          CONFIG_ALL_NONSHARED=n
          CONFIG_ALL_KMODS=n
          CONFIG_SIGNED_PACKAGES=n
          CONFIG_SIGNATURE_CHECK=n
          CONFIG_XRAY_PROVIDE_V2RAY=y
          CONFIG_PACKAGE_dnsmasq=n
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_v2ray-plugin=n
          CONFIG_v2ray-plugin_INCLUDE_GOPROXY=n
          CONFIG_V2RAY_CORE_COMPRESS_UPX=n
          CONFIG_XRAY_CORE_COMPRESS_UPX=n
          CONFIG_PACKAGE_luci-app-turboacc=y
          CONFIG_PACKAGE_TURBOACC_INCLUDE_OFFLOADING=y
          CONFIG_PACKAGE_TURBOACC_INCLUDE_SHORTCUT_FE=y
          CONFIG_PACKAGE_TURBOACC_INCLUDE_BBR_CCA=y
          CONFIG_PACKAGE_TURBOACC_INCLUDE_DNSFORWARDER=n
          CONFIG_PACKAGE_TURBOACC_INCLUDE_DNSPROXY=n
          CONFIG_PACKAGE_luci-app-store=n
          CONFIG_PACKAGE_openvpn-mbedtls=n
          CONFIG_PACKAGE_openvpn-wolfssl=n
          CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_NodeJS=y
          CONFIG_NGINX_DAV=y
          CONFIG_COREMARK_OPTIMIZE_O3=y
          CONFIG_COREMARK_ENABLE_MULTITHREADING=y
          CONFIG_TARGET_ipq806x=y
          CONFIG_TARGET_ipq806x_generic=y
          CONFIG_TARGET_ipq806x_generic_DEVICE_linksys_ea8500=y
          EOF
          #
          # ===============================================================
          # 
          make defconfig

      - name: Compile firmware
        run: |
          cd ./openwrt
          # small-package:luci-app-passwall compile error
          # openwrt-packages:luci-app-filebrowser compile error
          # both:luci-app-adguardhome compile error
          # make package/custom/luci-app-passwall/compile -j$(($(nproc)+1))
          for ipk in $(find package/custom/* -maxdepth 0 -type d); do
            if [ -e "$ipk/Makefile" ]; then 
              #if [ ! `echo $ipk | grep -E "luci-app-adguardhome"` ] && [ ! `echo $ipk | grep -E "luci-app-filebrowser"` ]; then
                if [ `echo $ipk | grep -E "luci-"` ]; then
                  make $ipk/compile -j$(($(nproc)+1)) || make $ipk/compile V=s
                fi
              #fi  
            fi
          done  
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          cd ./openwrt
          cd ./bin
          du -h ./ --max-depth=3
          tar -czvf ea8500.tar.xz targets packages
          cd -   
          cp ./bin/ea8500.tar.xz ../artifact/buildinfo/
          
          # rm -rf $(find ./bin/targets/ -type d -name "packages")
          # cp -rf $(find ./bin/targets/ -type f) ../artifact/firmware/
          # cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ../artifact/package/
          # cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ../artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

 #     - name: Upload release asset
 #       if: github.event == 'release'
 #       uses: svenstaro/upload-release-action@v2
 #       with:
 #         repo_token: ${{ secrets.YOURTOKEN }}
 #         file: ./artifact/firmware/*
 #         tag: ${{ github.ref }}
 #         file_glob: true
      # Publish a release if is a tag
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./bin/ea8500.tar.xz         
# This is a basic workflow to help you get started with Actions
