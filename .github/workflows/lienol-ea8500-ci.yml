# This is free software, lisence use MIT.
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: Lienol-ea8500-CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@main
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get update
          sudo -E apt-get -qq install build-essential clang bison python3-distutils  file asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          # 可用空间仅有31GB,编译需要约34-38GB空间
          sudo rm -rf /usr/share/dotnet
          # 可获得3GB空间
          df -h
          sudo rm -rf /usr/local/lib/android
          # 可获得11GB空间
          df -h
          sudo rm -rf /opt/ghc
          # 可获得0GB空间
          df -h
      - name: git clone Lienol
        run: |
          git clone --depth 1 --single-branch -b 23.05 https://github.com/Lienol/openwrt.git       
          mv ./openwrt/* ./ 
          du -h --max-depth=1
      - name: add kenzo8/openwrt-packages and kenzo8/small Update feeds
        run: |
          #sed -i '$a src-git proxy_small https://github.com/xiaorouji/openwrt-passwall-packages.git;main' feeds.conf.default
          #sed -i '$a src-git proxy https://github.com/xiaorouji/openwrt-passwall.git;main' feeds.conf.default
          #sed -i '$a src-git kenzo https://github.com/kenzok8/openwrt-packages.git' ./feeds.conf.default
          #sed -i '$a src-git small https://github.com/kenzok8/small.git' ./feeds.conf.default
          #kenzok8/openwrt-packages and /small-package have some clash with lienol 
          ./scripts/feeds update -a 
          ./scripts/feeds install -a
          #mv feeds/kenzo/{ddnsto,luci-app-ddnsto,luci-app-clash,luci-app-openclash,mosdns,smartdns} package/feeds/proxy/
          #mv feeds/small/{luci-app-bypass,luci-app-passwall2,luci-app-ssr-plus} package/feeds/proxy/
          #202402 https://github.com/kenzok8/small.git is not luci-app-vssr (it have 4 month ago) 
          #mv feeds/small/{redsocks2,shadow-tls,v2raya,lua-neturl,xray-core} package/feeds/proxy_small/
          #rm -rf ./feeds/packages/net/xray-core
          #cp -r package/feeds/proxy_small/xray-core ./feeds/packages/net/
          #202402 Lienol/openwrt-packages/net/xray-core compile have ocouer error(build error,it is 1.8.3)
          #rm -rf ./feeds/kenzo && rm -rf ./feeds/small
          #rm -rf ./package/feeds/kenzo && rm -rf ./package/feeds/small
          git clone -b js --single-branch https://github.com/gngpp/luci-theme-design package/feeds/proxy/luci-theme-design
          # practice above have succeed
          # also have do such this:
          # cd feeds/kenzo
          # rm -rf $(find . -maxdepth 1 -type d|grep -v ddnsto|grep -v clash|grep -v design|grep "./")
          # rm -rf ./{.git,.github,luci-app-design-config}
          # cd -
          # test above have failed at last
          #ls -la package/feeds/proxy
          # ./package directory have establish after running ./scripts/feeds install
          sed -i 's/luci-theme-bootstrap/luci-theme-argon/g' feeds/luci/collections/luci/Makefile
          sed -i 's/192.168.1.1/192.168.0.1/g' package/base-files/files/bin/config_generate
          sed -i "s/%D %V, %C/openwrt $(date +'%m.%d') by yindl/g" package/base-files/files/etc/banner
          rm -rf feeds/packages/lang/golang
          git clone https://github.com/sbwml/packages_lang_golang -b 21.x feeds/packages/lang/golang
      - name: download some code
        run: |
          # here is openwrt-19.07 or lede can not download some code
          #20230907 lienol-22.03 can not download trojan-plugin
          mkdir -p ./dl
          cd ./dl
          wget -c -r -nd -np http://204.13.154.47:8080/chfs/shared/openwrt-dl/
          rm -rf $(find -name "index.html*")
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #cp ./myea8500.config ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_ipq806x=y
          CONFIG_TARGET_ipq806x_generic=y
          CONFIG_TARGET_ipq806x_generic_DEVICE_linksys_ea8500=y
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_PACKAGE_UnblockNeteaseMusic-Go=m
          CONFIG_PACKAGE_adbyby=m
          CONFIG_PACKAGE_block-mount=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=m
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_chinadns-ng=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-base64=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_ddnsto=y
          CONFIG_PACKAGE_dns2socks=y
          CONFIG_PACKAGE_dns2tcp=y
          CONFIG_PACKAGE_haproxy=y
          CONFIG_PACKAGE_ip-full=y
          CONFIG_PACKAGE_ipset=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-iprange=y
          CONFIG_PACKAGE_iptables-mod-socket=y
          CONFIG_PACKAGE_iptables-zz-legacy=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-iprange=y
          CONFIG_PACKAGE_kmod-ipt-raw=y
          CONFIG_PACKAGE_kmod-ipt-socket=y
          CONFIG_PACKAGE_kmod-netlink-diag=y
          CONFIG_PACKAGE_kmod-nf-socket=y
          CONFIG_PACKAGE_kmod-tun=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libbpf=y
          CONFIG_PACKAGE_libcares=y
          CONFIG_PACKAGE_libelf=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libipset=y
          CONFIG_PACKAGE_libltdl=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_libpcre=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libudns=y
          CONFIG_PACKAGE_lua-neturl=m
          CONFIG_PACKAGE_luci-app-adbyby-plus=m
          CONFIG_PACKAGE_luci-app-advanced-reboot=y
          CONFIG_PACKAGE_luci-app-autoreboot=y
          CONFIG_PACKAGE_luci-app-bypass=m
          CONFIG_PACKAGE_luci-app-ddns=m
          CONFIG_PACKAGE_luci-app-ddnsto=y
          CONFIG_PACKAGE_luci-app-omcproxy=y
          CONFIG_PACKAGE_luci-app-passwall=m
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan_GO=y
          CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Xray_Plugin=y
          CONFIG_PACKAGE_luci-app-passwall_Iptables_Transparent_Proxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_NaiveProxy=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-unblockmusic=m
          CONFIG_PACKAGE_luci-app-wol=m
          CONFIG_PACKAGE_luci-i18n-adbyby-plus-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-advanced-reboot-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-autoreboot-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-bypass-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ddns-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ddnsto-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-omcproxy-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-unblockmusic-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-wol-zh-cn=m
          CONFIG_PACKAGE_luci-lib-ipkg=m
          CONFIG_PACKAGE_microsocks=y
          CONFIG_PACKAGE_mosdns=m
          CONFIG_PACKAGE_naiveproxy=y
          CONFIG_PACKAGE_omcproxy=y
          CONFIG_PACKAGE_resolveip=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-server=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-check=m
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-server=m
          CONFIG_PACKAGE_simple-obfs=y
          CONFIG_PACKAGE_sing-box=y
          CONFIG_PACKAGE_smartdns=m
          CONFIG_PACKAGE_tcping=y
          CONFIG_PACKAGE_trojan=m
          CONFIG_PACKAGE_trojan-go=y
          CONFIG_PACKAGE_trojan-plus=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_PACKAGE_xray-core=y
          CONFIG_PACKAGE_xray-plugin=y
          CONFIG_PACKAGE_xtables-legacy=y
          CONFIG_PCRE_JIT_ENABLED=y
          CONFIG_SING_BOX_WITH_CLASH_API=y
          CONFIG_SING_BOX_WITH_DHCP=y
          CONFIG_SING_BOX_WITH_ECH=y
          CONFIG_SING_BOX_WITH_QUIC=y
          CONFIG_SING_BOX_WITH_UTLS=y
          CONFIG_SING_BOX_WITH_WIREGUARD=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF
          #
          #CONFIG_PACKAGE_luci-app-diskman=m or CONFIG_PACKAGE_luci-app-turboacc=m have ocouer compile linux error
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j$(nproc) || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          #find dl -size -1024c -exec rm -f {} \;
          # git switch -c 5a2559f0648198c290bb8839b9f6a0adab8ebcdc
          #git switch -c d63ff863800a5645aca4309d5dd5962bd1e95543
          #git switch -c 486bebd9208539058e57e23a12f23103016e09b4
          #git switch -c 697977d8d0ccf0ab596e5692d08608a75dd7f33d
          #git switch -c 740d0102c518cd49f30c5580982b218b480006b1
          #git switch -c 809a00deffe9f3d4ecd15965790a152757073437
          #git switch -c 9228212b4238c0d8c296f795948ede8f2ca0242e
          #git switch -c 9b74deef2816d91e58926e6fab7a6ff931eb3b22
          #git switch -c 31f5cd4b83da5a7c0fdca240b4e72677e4523b6e
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) V=s || make -j1 V=s
          #make -j1 V=sc
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          cd ./bin
          du -h ./ --max-depth=3
          tar -czvf ea8500.tar.xz targets packages
          cd -   
          cp ./bin/ea8500.tar.xz ./artifact/buildinfo/
          
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

 #     - name: Upload release asset
 #       if: github.event == 'release'
 #       uses: svenstaro/upload-release-action@v2
 #       with:
 #         repo_token: ${{ secrets.YOURTOKEN }}
 #         file: ./artifact/firmware/*
 #         tag: ${{ github.ref }}
 #         file_glob: true
      # Publish a release if is a tag
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./bin/ea8500.tar.xz         
# This is a basic workflow to help you get started with Actions
